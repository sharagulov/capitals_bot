import { Context } from "telegraf";
import { registerUser } from "@/services/register.service";
import { ADMIN_PASS } from "@/config/config";
import { handleStartMenu } from "@/services/menu.service";

export async function startHandler(ctx: Context) {
  if (!("text" in ctx.message!)) return;
  const isAdmin = ctx.message?.text?.split(" ").slice(1)[0] === ADMIN_PASS;

  const { user, newUser, adminGiven } = await registerUser(ctx, isAdmin);
  if (newUser) {
    await ctx.reply(
      `üëã –ü—Ä–∏–≤–µ—Ç, *${ctx.from?.first_name}*\n` +
        `–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã—É—á–∏—Ç—å —Å—Ç–æ–ª–∏—Ü—ã –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω –º–∏—Ä–∞!\n` +
        `–≠—Ç–æ –∂–µ –∫—Ä—É—Ç–æ!\n`,
      // +
      // `–ö—Ä—É–≥ ‚Äî –∫–æ–ª-–≤–æ —Å—Ç—Ä–∞–Ω –∏–ª–∏ —Å—Ç–æ–ª–∏—Ü, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Ç–≥–∞–¥–∞—Ç—å –∑–∞ –æ–¥–∏–Ω –∏–≥—Ä–æ–≤–æ–π –∫—Ä—É–≥. –°–æ–≤–µ—Ç—É—é –Ω–∞—á–∞—Ç—å —Å 10.\n` +
      // `–†–µ–∂–∏–º ‚Äî —É–≥–∞–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω—É –ø–æ —Å—Ç–æ–ª–∏—Ü–µ –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç`,
      {
        parse_mode: "Markdown",
      }
    );
  } else {
    await ctx.reply(
      `üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, *${ctx.from?.first_name}*\n`,
        {
          parse_mode: "Markdown",
        }
    );
  }

  return handleStartMenu(ctx);
}
